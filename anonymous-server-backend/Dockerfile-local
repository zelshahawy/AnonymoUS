# ─── Stage 1: Build a static Go binary ───────────────────────────────
FROM golang:1.24-alpine AS builder

# install git (for go modules) and C toolchain in case any deps need cgo
RUN apk add --no-cache git build-base

WORKDIR /app

# cache deps
COPY go.mod go.sum ./
RUN go mod download

# copy the rest of your code
COPY . .

# produce a fully static, stripped binary
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix nocgo \
    -ldflags="-w -s" \
    -o bin/Anonymous_backend .

# ─── Stage 2: Minimal runtime image ─────────────────────────────────
FROM alpine:latest

# only for TLS, logging, etc.
RUN apk add --no-cache ca-certificates

# copy in your built binary
COPY --from=builder /app/bin/Anonymous_backend /usr/local/bin/Anonymous_backend

# drop privileges if you like
USER nobody:nobody

EXPOSE 8080

# default entrypoint
ENTRYPOINT ["Anonymous_backend"]

